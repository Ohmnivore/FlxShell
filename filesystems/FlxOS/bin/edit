import hxclap.arg.CmdTargStr;
import hxclap.E_CmdArgSyntax;
import flxsys.FlxCmdLine;
import flxsys.Folder;
import flxsys.File;
import StringTools;
import flixel.FlxG;
import flxsys.FlxEditor;

ignoreRequired = false;
if (fileInput != null || input != null)
{
    ignoreRequired = true;
}

s = new CmdTargStr(
        "source",
        "File path (relative or absolute)",
        "Source file to read",
        (E_CmdArgSyntax.isREQ | E_CmdArgSyntax.isVALREQ),
        ""
        );

cmdline = new FlxCmdLine("edit", [s], ignoreRequired);
cmdline.addHelp = "Ctrl-s to save, and Ctrl-d to quit.";

status = cmdline.getParseReturn(Args);
if (status != FlxCmdLine.OK)
{
    return [status, "", ""];
}

if (input != null)
{
    if (Std.is(input[0], File))
    {
        f = input[0].content;
    }
    else
    {
        f = Shell.drive.readFile(input[0], Shell.curDir.path);
    }
}

if (fileInput != null)
{
    f = fileInput;
}

if (fileInput == null && input == null)
{
    f = Shell.curDir;
    if (StringTools.trim(s.value).length < 1)
    {
        f = Shell.curDir;
    }
    else
    {
        f = Shell.drive.readFile(s.value, Shell.curDir.path);
    }
}

Shell.openEditor(f);

return [null, "", ""];